[{"path":"https://lifewatch.github.io/mregions2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 mregions2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lifewatch.github.io/mregions2/articles/packagedev_june2022.html","id":"package-structure","dir":"Articles","previous_headings":"","what":"package structure","title":"mregions2 package development info","text":"relevant functions gazetteer webservices mr_gaz_records.R. contain assertions checkmate-package. Assertions claimed complete might good check assertions step. Tests testthat-package started definetely completed/altered. recently worked branch dev_OOP merge main. branch created class MarineRegion using R6-package. branch, function called mr_gaz_relations_full_by_MRGID mr_gaz_records.R, use webservices fetches relations open-linked data mr_gaz_ldes(). might useful include general package. function included end vignette.","code":""},{"path":[]},{"path":"https://lifewatch.github.io/mregions2/articles/packagedev_june2022.html","id":"points-of-discussion","dir":"Articles","previous_headings":"wrapup meeting 01.06.2022","what":"points of discussion","title":"mregions2 package development info","text":"remove _gaz_ function names?","code":""},{"path":[]},{"path":"https://lifewatch.github.io/mregions2/articles/packagedev_june2022.html","id":"conventional-approach","dir":"Articles","previous_headings":"wrapup meeting 01.06.2022 > agreed changes","what":"conventional approach","title":"mregions2 package development info","text":"rename mr_gaz_ldes() something informative. Potentially display information clearer (.e. less nested) way.","code":""},{"path":"https://lifewatch.github.io/mregions2/articles/packagedev_june2022.html","id":"object-oriented-programming-oop-approach","dir":"Articles","previous_headings":"wrapup meeting 01.06.2022 > agreed changes","what":"Object Oriented Programming (OOP) approach","title":"mregions2 package development info","text":"rename mr_marine_region() mr_GeoObject() class MarineRegion GeoObject. remove area object creation mr_marine_region() change description marine_region RStudio environment (now R6 Object containing active binding0)","code":""},{"path":"https://lifewatch.github.io/mregions2/articles/packagedev_june2022.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"mregions2 package development info","text":"explore include lazy loading mr_gaz_relations_full_by_MRGID(): change way relation retrieved mr_gaz_ldes(). make CRS accessible mr_gaz_geometry() print comprehensible error message PC connected internet. started test-mr_gaz_records.R test make much sense just yet. include sth checks language gazetteer entry make clearer function name mr_gaz_record(). , user fetches geometry (existent). Transport information function name, e.g. changing name mr_gaz_record_geom()?","code":""},{"path":"https://lifewatch.github.io/mregions2/articles/packagedev_june2022.html","id":"things-that-i-think-could-be-nice-in-the-package","dir":"Articles","previous_headings":"","what":"Things that I think could be nice in the package","title":"mregions2 package development info","text":"enable km radius getGazetteerRecordsByLatLong. moment, lat_radius lon_radius 0 gives 100 results (max retrievable number) units degrees. create wrapper function existing webservice functions lets user specify attributes gazetteer record, e.g. name == \"France\" & placeType == \"Nation\" & language == \"English\". Yes, can also done additional step user speed workflow retrieving record. add column gazetteer record specifies record geometry . mr_has_geometry() already exists might helpful give information user directly without requiring know function. addition, might prevent confusion someone tries get geometry error thrown.","code":"#' Get all Relations for a Marine Gazetteer Record #' #' @param mrgid The Marine Regions Geographic IDentifier. #' #' @return A `tibble` with all records that are related. The column `relation` contains the type of relation. #' Explanations of the relation types can be found at: \\url{https://marineregions.org/ontology/documentation.html#objectproperties}. #' @export #' @examples #' belgium_mrgid <- 14 #' belgium_relations <- mr_gaz_relations_full_by_MRGID(belgium_mrgid) mr_gaz_relations_full_by_MRGID <- function(mrgid){    record <- mregions2::mr_gaz_ldes(mrgid, type = \"list\")    relations = record[grepl(\"mr:\", names(record))]   if(\"mr:hasGeometry\" %in% names(relations)) relations[[\"mr:hasGeometry\"]] <- NULL    for (i in 1:length(relations)) {     for (j in 1:length(relations[[i]])) {       relative_url <- relations[[i]][[j]][[\"@id\"]]       relative_mrgid <- gsub(\"http://marineregions.org/mrgid/\", \"\", relative_url)       relative_mrgid <- as.integer(relative_mrgid)       temp_res_j <- mregions2::mr_gaz_record(relative_mrgid, add_geometry = FALSE)       temp_res_j$relation <- gsub(\"mr:\", \"\", names(relations[i]))        ifelse(j == 1,              res_j <- temp_res_j,              res_j <- rbind(res_j, temp_res_j))     }     ifelse(i == 1,            res <- res_j,            res <- rbind(res, res_j))   }    return(res)    # TODO: add assertions and unit tests   # TODO: turn for loops into lapply functions }"},{"path":"https://lifewatch.github.io/mregions2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lotte Pohl. Author.            whaleshark99 Salvador Fernandez. Author, maintainer.            salvafern . Funder.            https://lifewatch.","code":""},{"path":"https://lifewatch.github.io/mregions2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pohl L, Fernandez S (2022). mregions2: Marine Regions Data 'Marineregions.org'. R package version 0.1.0, https://lifewatch.github.io/mregions2/.","code":"@Manual{,   title = {mregions2: Marine Regions Data from 'Marineregions.org'},   author = {Lotte Pohl and Salvador Fernandez},   year = {2022},   note = {R package version 0.1.0},   url = {https://lifewatch.github.io/mregions2/}, }"},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mregions2","dir":"","previous_headings":"","what":"Marine Regions Data from Marineregions.org","title":"Marine Regions Data from Marineregions.org","text":"mregions2 supersedes mregions. aims : Retrieve marine geospatial information Marineregions gazetteer. Access handle data products Flanders Marine Institute (VLIZ) geoserver.","code":""},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Marine Regions Data from Marineregions.org","text":"can install development version mregions2 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"lifewatch/mregions2\")"},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Marine Regions Data from Marineregions.org","text":"information function, type ?<function_name> R console. opens function’s documentation.","code":"library(mregions2)  # helper library library(mapview)"},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mr_gaz_records_by_names","dir":"","previous_headings":"Examples","what":"mr_gaz_records_by_names()","title":"Marine Regions Data from Marineregions.org","text":"function retrieves records Marine Gazetteer inputting one search terms, .e. \"North Sea\" \"Belgium\". result tibble records contain one search terms preferredGazetteerName. Records can name, however, always distinguishable MRGID. Let’s look bit closer records named North Sea. 6 records preferredGazetteerName == \"North Sea\" differ Placetype. correct record choose depends goal analysis. status record can, however, help decide one choose. example, status 6 records north_sea_name either standard, synonym deleted. case, North Sea Placetype == \"IHO Sea Area\", standard status, preferred.","code":"north_sea <- mr_gaz_records_by_names(\"North Sea\")  head(north_sea$preferredGazetteerName) #> [1] \"Belgian part of the North Sea\"             #> [2] \"Central North Sea\"                         #> [3] \"Danish part of the North Sea\"              #> [4] \"Dutch part of the North Sea\"               #> [5] \"EMODnet-Biology reporting area: North Sea\" #> [6] \"French part of Greater North Sea\" # north_sea_name <- north_sea[north_sea$preferredGazetteerName == \"North Sea\", ] north_sea_name <- subset(north_sea, preferredGazetteerName == \"North Sea\") # View(north_sea_name) north_sea_name$placeType #> [1] \"IHO Sea Area\"                         #> [2] \"Large Marine Ecosystem\"               #> [3] \"Marine Ecoregion of the World (MEOW)\" #> [4] \"ICES Ecoregion\"                       #> [5] \"SeaVoX SeaArea - level 3\"             #> [6] \"SeaVoX SeaArea - sub-region\" north_sea_name$status #> [1] \"standard\" \"synonym\"  \"synonym\"  \"deleted\"  \"synonym\"  \"synonym\""},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mr_gaz_record","dir":"","previous_headings":"Examples","what":"mr_gaz_record()","title":"Marine Regions Data from Marineregions.org","text":"function retrieves geometry VLIZ geoserver. geometry geospatial object class(sf) (simple feature) sf R package. can find introduction simple feature objects sf overview available functions. following example, geometry North Sea IHO Sea Area retrieved visualised.","code":"north_sea_IHO <- subset(north_sea, placeType == \"IHO Sea Area\" & preferredGazetteerName == \"North Sea\") mrgid <- north_sea_IHO$MRGID  # check the outcome when a geom is there and when not # IHO_geom <- mr_gaz_record(mrgid) # colnames(IHO_geom) #  # mapview(IHO_geom)"},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mr_gaz_info","dir":"","previous_headings":"Examples","what":"mr_gaz_info()","title":"Marine Regions Data from Marineregions.org","text":"function lists information Marine Gazetteer records, namely placeTypes sources. especially useful using mr_gaz_records_by_type() mr_gaz_records_by_source().results tibbles first 100 sources using mr_gaz_info(\"sources\") possible placeTypes using mr_gaz_info(\"placetypes\").","code":"all_sources <- mr_gaz_info(\"sources\") head(all_sources$source) #> [1] \"SAIL\"                                                                                                                                                                                                                                                   #> [2] \"ASFA thesaurus\"                                                                                                                                                                                                                                         #> [3] \"Nationaal Instituut voor de Statistiek (NIS) / National Statistical Service\"                                                                                                                                                                            #> [4] \"Oosthoek Times Wereldatlas\"                                                                                                                                                                                                                             #> [5] \"Lausch, E. (2000). Atlas van de oceanen: met de dieptekaarten van de wereldzeeën, die de Canadese Hydrografische Dienst heeft gepubliceerd (General Bathymetric Chart of the Oceans, GEBCO). Tirion Uitgevers B.V.: Baarn. ISBN 90-7303-598-8. 264 pp.\" #> [6] \"(2001). The Times comprehensive atlas of the world. 10th ed. Times Books: London. ISBN 0-7230-0792-6. 67, 220, 124 plates pp.\" all_types <- mr_gaz_info(\"placetypes\") head(all_types$type) #> [1] \"Town\"                      \"Arrondissement\"            #> [3] \"Department\"                \"Province (administrative)\" #> [5] \"Country\"                   \"Continent\""},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mr_gaz_records_by_type","dir":"","previous_headings":"Examples","what":"mr_gaz_records_by_type()","title":"Marine Regions Data from Marineregions.org","text":"function retrieves first 100 records Marine Gazetteer inputting placetype. can \"Sandbank\" \"Archipelago\", instance. result mr_gaz_records_by_type() tibble first 100 records specified Placetype. following example, list available placeTypes fetched using mr_gaz_info(\"placetypes\").","code":"placetypes <- mr_gaz_info(\"placetypes\")  archipelagos <- mr_gaz_records_by_type(\"Archipelago\") head(archipelagos$preferredGazetteerName) #> [1] \"Vainameri Archipelago\" \"Azores\"                \"Channel Islands\"       #> [4] \"Faeroe Islands\"        \"British Isles\"         \"Isles of Scilly\""},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mr_gaz_records_by_source","dir":"","previous_headings":"Examples","what":"mr_gaz_records_by_source()","title":"Marine Regions Data from Marineregions.org","text":"function retrieves first 100 records Marine Gazetteer inputting source. can \"GeoNames\" \"AlgaeNames\", instance. following example, list first 100 available sources fetched using mr_gaz_info(\"sources\"). result mr_gaz_records_by_source() tibble first 100 records specified source.","code":"placetypes <- mr_gaz_info(\"placetypes\")  archipelagos <- mr_gaz_records_by_type(\"Archipelago\") head(archipelagos$preferredGazetteerName) #> [1] \"Vainameri Archipelago\" \"Azores\"                \"Channel Islands\"       #> [4] \"Faeroe Islands\"        \"British Isles\"         \"Isles of Scilly\""},{"path":"https://lifewatch.github.io/mregions2/index.html","id":"mr_gaz_records_by_latlon","dir":"","previous_headings":"Examples","what":"mr_gaz_records_by_latlon()","title":"Marine Regions Data from Marineregions.org","text":"function retrieves first 100 records Marine Gazetteer inputting Latitude Longitude. result mr_gaz_records_by_latlon() tibble first 100 records specified lat lon, centroid within bounding box calculated latitude (+/- radius) longitude (+/- radius). following examples, records area Mariana Trench, retrieved. many Guyots around Mariana Trench, apparently! Let’s explore bit.","code":"mariana_trench <- mr_gaz_records_by_names(\"Mariana Trench\")  mariana_trench_lat <- mariana_trench$latitude mariana_trench_lon <- mariana_trench$longitude  records_mariana_trench <- mr_gaz_records_by_latlon(mariana_trench_lat, mariana_trench_lon)  head(records_mariana_trench$preferredGazetteerName) #> [1] \"Trinidad Seamount\"      \"Victoria Guyot\"         \"Vogt Guyot\"             #> [4] \"Lapulapu Ridge\"         \"Lowrie Guyot\"           \"Minami-Kasuga Seamount\" all_types <- mr_gaz_info(\"placetypes\")  guyot <- subset(all_types, type == \"Guyot\") guyot$description #> [1] \"A seamount having a comparatively smooth flat top. Also called tablemount.\"  guyots_mariana_trench <- subset(records_mariana_trench, placeType == \"Guyot\")  nrow(guyots_mariana_trench) #> [1] 21"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the geometry a Marine Regions Gazetteer record as Well Known Text — mr_gaz_geometry","title":"Get the geometry a Marine Regions Gazetteer record as Well Known Text — mr_gaz_geometry","text":"Get geometry Marine Regions Gazetteer record Well Known Text","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the geometry a Marine Regions Gazetteer record as Well Known Text — mr_gaz_geometry","text":"","code":"mr_gaz_geometry(mrgid)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the geometry a Marine Regions Gazetteer record as Well Known Text — mr_gaz_geometry","text":"mrgid Marine Regions Gazetter Unique Identifier","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the geometry a Marine Regions Gazetteer record as Well Known Text — mr_gaz_geometry","text":"string geometry Marine Regions object WKT","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the geometry a Marine Regions Gazetteer record as Well Known Text — mr_gaz_geometry","text":"","code":"test <- mr_gaz_geometry(4280) test <- mr_gaz_geometry(3293) test <- mr_gaz_geometry(26567)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve information of Marine Gazetteer Records — mr_gaz_info","title":"Retrieve information of Marine Gazetteer Records — mr_gaz_info","text":"Available Placetypes Sources [Marine Gazetteer](https://marineregions.org/gazetteer.php) Records. Useful retrieving information Gazetteer Records based Placetypes (`mr_gaz_records_by_type()`) Sources (`mr_gaz_records_by_source`).","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve information of Marine Gazetteer Records — mr_gaz_info","text":"","code":"mr_gaz_info(info = c(\"sources\", \"placetypes\"))"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve information of Marine Gazetteer Records — mr_gaz_info","text":"info information wished retrieve. Must one : `c(\"sources\", \"placetypes\")`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve information of Marine Gazetteer Records — mr_gaz_info","text":"Sources: tibble source source URL. Placetypes: tibble ID, name description Placetype available [Marine Gazetteer](https://marineregions.org/gazetteer.php).","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve information of Marine Gazetteer Records — mr_gaz_info","text":"","code":"placetypes <- mr_gaz_info(info = \"placetypes\") placetypes$type[28] #> [1] \"Sandbank\" # [1] \"Sandbank\"  sources <- mr_gaz_info(info = \"sources\") sources$source[36] #> [1] \"GeoNames\" # [1] \"GeoNames\""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_ldes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a Marine Regions Gazetteer record as Open Linked Data — mr_gaz_ldes","title":"Retrieves a Marine Regions Gazetteer record as Open Linked Data — mr_gaz_ldes","text":"Retrieves Marine Regions Gazetteer record Open Linked Data","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_ldes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a Marine Regions Gazetteer record as Open Linked Data — mr_gaz_ldes","text":"","code":"mr_gaz_ldes(mrgid, type = \"list\")"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_ldes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a Marine Regions Gazetteer record as Open Linked Data — mr_gaz_ldes","text":"mrgid Marine Regions Gazetter Unique Identifier type Return resuts RDF list","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_ldes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves a Marine Regions Gazetteer record as Open Linked Data — mr_gaz_ldes","text":"Marine Regions Gazetteer record triples RDF list","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_ldes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves a Marine Regions Gazetteer record as Open Linked Data — mr_gaz_ldes","text":"","code":"test <- mr_gaz_ldes(26567) test <- mr_gaz_ldes(3293, type = \"list\") test <- mr_gaz_ldes(1902, type = \"rdf\")"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Marine Regions Gazetteer record — mr_gaz_record","title":"Get a Marine Regions Gazetteer record — mr_gaz_record","text":"Get Marine Regions Gazetteer record","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Marine Regions Gazetteer record — mr_gaz_record","text":"","code":"mr_gaz_record(mrgid, add_geometry = TRUE)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Marine Regions Gazetteer record — mr_gaz_record","text":"mrgid Marine Regions Gazetter Unique Identifier add_geometry set FALSE retrieve geometry","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Marine Regions Gazetteer record — mr_gaz_record","text":"Marine Regions Gazetteer record","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Marine Regions Gazetteer record — mr_gaz_record","text":"","code":"test <- mr_gaz_record(3293) test <- mr_gaz_record(4280)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_latlon.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Gazetteer Records by Lat-Lon Coordinates — mr_gaz_records_by_latlon","title":"Retrieve Gazetteer Records by Lat-Lon Coordinates — mr_gaz_records_by_latlon","text":"Get first 100 [Marine Gazetteer](https://marineregions.org/gazetteer.php) records, centroid within bounding box calculated latitude (+/- radius) longitude (+/- radius)","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_latlon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Gazetteer Records by Lat-Lon Coordinates — mr_gaz_records_by_latlon","text":"","code":"mr_gaz_records_by_latlon(lat, lon, lat_radius = 0, lon_radius = 0)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_latlon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Gazetteer Records by Lat-Lon Coordinates — mr_gaz_records_by_latlon","text":"lat decimal number ranges -90 90. lon decimal number ranges -180 +180. lat_radius Searches latitudes range 'latitude'-'latRadius' 'latitude'+'latRadius' default = 0. lon_radius Searches longitudes range 'longitude'-'longRadius' 'longitude'+'longRadius' default = 0.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_latlon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Gazetteer Records by Lat-Lon Coordinates — mr_gaz_records_by_latlon","text":"tibble first 100 Gazetteer records specified coordinates.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_latlon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Gazetteer Records by Lat-Lon Coordinates — mr_gaz_records_by_latlon","text":"","code":"oostende_lat <- 51.21551 oostende_lon <- 2.927 oostende <- mr_gaz_records_by_latlon(oostende_lat, oostende_lon)  some_atlantic_lat <- -37 some_atlantic_lon <- 37 some_atlantic_location <- mr_gaz_records_by_latlon(some_atlantic_lat, some_atlantic_lon)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Gazetteer Records by Name — mr_gaz_records_by_name","title":"Retrieve Gazetteer Records by Name — mr_gaz_records_by_name","text":"Retrieve Gazetteer Records Name","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Gazetteer Records by Name — mr_gaz_records_by_name","text":"","code":"mr_gaz_records_by_name(   name,   count = 100,   like = TRUE,   fuzzy = FALSE,   offset = 0 )"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Gazetteer Records by Name — mr_gaz_records_by_name","text":"name GazetteerName marine region interest. count Number records retrieve. like Formats name SQL-like syntax. fuzzy Uses Levenshtein query find nearest matches. offset Start record number, order page next batch results.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Gazetteer Records by Name — mr_gaz_records_by_name","text":"tibble Gazetter records.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Gazetteer Records by Name — mr_gaz_records_by_name","text":"","code":"mr_gaz_records_by_name(name = \"High Seas\", count = 5) #> # A tibble: 5 × 14 #>   MRGID gazett…¹ place…² latit…³ longi…⁴ minLa…⁵ minLo…⁶ maxLa…⁷ maxLo…⁸ preci…⁹ #>   <int> <chr>    <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <lgl>   #> 1 63203 \"United… High S…     0      0    -90      -180      90     180   NA      #> 2 25721 \"VLIZ (… Marine…    11.4   64.0    0.864    54.4    21.8    70.4 NA      #> 3 25714 \"VLIZ (… Marine…    85.1   -7.33  72.8    -180      90     180   NA      #> 4 49698 \"VLIZ (… Marine…    74.7   39.4   72.1      33.7    77.0    44.0 NA      #> 5 25723 \"VLIZ (… Marine…    11.4   87.2    5.68     83.4    18.4    90.7 NA      #> # … with 4 more variables: preferredGazetteerName <chr>, #> #   preferredGazetteerNameLang <chr>, status <chr>, accepted <int>, and #> #   abbreviated variable names ¹​gazetteerSource, ²​placeType, ³​latitude, #> #   ⁴​longitude, ⁵​minLatitude, ⁶​minLongitude, ⁷​maxLatitude, ⁸​maxLongitude, #> #   ⁹​precision #> # ℹ Use `colnames()` to see all variable names"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Gazetteer Records by a list of Names — mr_gaz_records_by_names","title":"Retrieve Gazetteer Records by a list of Names — mr_gaz_records_by_names","text":"Retrieve Records [Marine Gazetteer](https://marineregions.org/gazetteer.php) contain one parameters `names` `preferredGazetteerName`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Gazetteer Records by a list of Names — mr_gaz_records_by_names","text":"","code":"mr_gaz_records_by_names(names, like = TRUE, fuzzy = FALSE)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Gazetteer Records by a list of Names — mr_gaz_records_by_names","text":"names Names retrieved like Formats name SQL-like syntax. Default = TRUE. fuzzy Uses Levenshtein query find nearest matches. Default = FALSE.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Gazetteer Records by a list of Names — mr_gaz_records_by_names","text":"Tibble Gazetteer records.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Gazetteer Records by a list of Names — mr_gaz_records_by_names","text":"","code":"names <- c(\"Atlantic Ocean\", \"Vanuatu\", \"Mariana Trench\") result <- mr_gaz_records_by_names(names)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Gazetteer Records by Source — mr_gaz_records_by_source","title":"Retrieve Gazetteer Records by Source — mr_gaz_records_by_source","text":"Every record [Marine Gazetteer](https://marineregions.org/gazetteer.php) placetype, e.g. `Sandbank` `Marine Protected Area`. placetypes currently available gazetteer can retrieved via `mr_gaz_info(\"placetypes\")`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Gazetteer Records by Source — mr_gaz_records_by_source","text":"","code":"mr_gaz_records_by_source(source)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Gazetteer Records by Source — mr_gaz_records_by_source","text":"source source records retrieved. Must one types `mr_gaz_info(\"placetypes\")` class `character`. Case insensitive.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Gazetteer Records by Source — mr_gaz_records_by_source","text":"tibble Gazetteer records specified placetype.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Gazetteer Records by Source — mr_gaz_records_by_source","text":"","code":"ecoregions <- mr_gaz_records_by_source(\"ICES Ecoregions\") ecoregions$preferredGazetteerName[4] #> [1] \"Oceanic Northeast Atlantic\""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Gazetteer Records by Placetype — mr_gaz_records_by_type","title":"Retrieve Gazetteer Records by Placetype — mr_gaz_records_by_type","text":"Every record [Marine Gazetteer](https://marineregions.org/gazetteer.php) placetype, e.g. `Sandbank` `Marine Protected Area`. placetypes currently available gazetteer can retrieved via `mr_gaz_info(\"placetypes\")`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Gazetteer Records by Placetype — mr_gaz_records_by_type","text":"","code":"mr_gaz_records_by_type(type, offset = 0)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Gazetteer Records by Placetype — mr_gaz_records_by_type","text":"type placetype records retrieved. Must one types `mr_gaz_info(\"placetypes\")` class `character`. Case insensitive. offset Start record number, order page next batch results.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Gazetteer Records by Placetype — mr_gaz_records_by_type","text":"tibble Gazetteer records specified placetype.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_records_by_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Gazetteer Records by Placetype — mr_gaz_records_by_type","text":"","code":"fao_subdivs <- mr_gaz_records_by_type(\"FAO Subdivisions\") fao_subdivs$preferredGazetteerName[1] #> [1] \"Northern Alboran Sea\" # [1] \"Northern Alboran Sea\""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_relations_by_MRGID.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Gazetter Relations by MRGID — mr_gaz_relations_by_MRGID","title":"Retrieve Gazetter Relations by MRGID — mr_gaz_relations_by_MRGID","text":"Gazetteer Records related given input MRGID. Relationships can parents (`upper`), children (`lower`) oder . Geographic types can also specified, example `partof` `adjacentto`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_relations_by_MRGID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Gazetter Relations by MRGID — mr_gaz_relations_by_MRGID","text":"","code":"mr_gaz_relations_by_MRGID(mrgid, direction = \"upper\", type = \"partof\")"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_relations_by_MRGID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Gazetter Relations by MRGID — mr_gaz_relations_by_MRGID","text":"mrgid [Marine Regions Geographic IDentifier](https://marineregions.org/mrgid.php). direction hierarchical structure. Must one `c(\"upper\", \"lower\", \"\")`. `\"upper\"` lists parents record. `\"lower\"` lists childs record. `\"\"` lists parents childs record. type must one `c(\"partof\", \"partlypartof\", \"adjacentto\", \"similarto\", \"administrativepartof\", \"influencedby\", \"\")`. Explanations `types` [](https://marineregions.org/ontology/documentation.html) chapter *Object Properties*.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_relations_by_MRGID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Gazetter Relations by MRGID — mr_gaz_relations_by_MRGID","text":"`tibble` relations given `MRGID`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_gaz_relations_by_MRGID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Gazetter Relations by MRGID — mr_gaz_relations_by_MRGID","text":"","code":"mariana_trench <- mr_gaz_records_by_names(\"Mariana Trench\") mariana_trench_mrgid <- mariana_trench$MRGID  mariana_trench_relations <- mr_gaz_relations_by_MRGID(mariana_trench_mrgid) mariana_trench_relations$preferredGazetteerName #> [1] \"North Pacific Ocean\""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_null_to_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NULL values with NA in list — mr_null_to_na","title":"Replace NULL values with NA in list — mr_null_to_na","text":"useful running `tibble::as_tibble()` accept NULL.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_null_to_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NULL values with NA in list — mr_null_to_na","text":"","code":"mr_null_to_na(list_with_NULL)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_null_to_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NULL values with NA in list — mr_null_to_na","text":"list_with_NULL list element passed changed NA NULL.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_null_to_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace NULL values with NA in list — mr_null_to_na","text":"elements e.g. list NA instead NULL.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_null_to_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace NULL values with NA in list — mr_null_to_na","text":"","code":"y <- list( one = c(month.abb, 5), two = c(NULL, 5, NA), three = NULL, four = list(NULL) # does not change nested NULL for now ) str(y) #> List of 4 #>  $ one  : chr [1:13] \"Jan\" \"Feb\" \"Mar\" \"Apr\" ... #>  $ two  : num [1:2] 5 NA #>  $ three: NULL #>  $ four :List of 1 #>   ..$ : NULL z <- mr_null_to_na(y) str(z) #> List of 4 #>  $ one  : chr [1:13] \"Jan\" \"Feb\" \"Mar\" \"Apr\" ... #>  $ two  : num [1:2] 5 NA #>  $ three: logi NA #>  $ four :List of 1 #>   ..$ : NULL"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_req_URL.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a base URL for a http request. — mr_req_URL","title":"Create a base URL for a http request. — mr_req_URL","text":"Create base URL http request.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_req_URL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a base URL for a http request. — mr_req_URL","text":"","code":"mr_req_URL(api_type, file_format, method)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_req_URL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a base URL for a http request. — mr_req_URL","text":"api_type Type API architecture. Must one c(\"rest\", \"soap\"). file_format File format. Must one c(\"json\", \"xml\", \"ttl\", \"jsonld\"). method RESTful method. Check Marineregions gazetteer https://marineregions.org/gazetteer.php?p=webservices available methods.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_req_URL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a base URL for a http request. — mr_req_URL","text":"base URL append queries .","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_req_URL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a base URL for a http request. — mr_req_URL","text":"","code":"api <- \"rest\" file <- \"json\" method <- \"getGazetteerRecordsByName\" mr_req_URL(api_type = api, file_format = file, method = method) #> https://marineregions.org//rest/getGazetteerRecordsByName.json/ # https://marineregions.org//rest/getGazetteerRecordsByName.json/"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_resp_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform httr2 response into tibble — mr_resp_to_tibble","title":"Transform httr2 response into tibble — mr_resp_to_tibble","text":"Transform httr2 response tibble","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_resp_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform httr2 response into tibble — mr_resp_to_tibble","text":"","code":"mr_resp_to_tibble(resp, unpack = FALSE)"},{"path":"https://lifewatch.github.io/mregions2/reference/mr_resp_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform httr2 response into tibble — mr_resp_to_tibble","text":"resp response httr2 request. unpack Set `TRUE` `mr_gaz_records_by_names()` run. webservice nests result .","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_resp_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform httr2 response into tibble — mr_resp_to_tibble","text":"tibble containing json response body httr2 response.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/mr_resp_to_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform httr2 response into tibble — mr_resp_to_tibble","text":"","code":"name <- \"High Sea\" count <- 5 url <- \"https://marineregions.org//rest/getGazetteerRecordsByName.json/\"  req <- httr2::request(url) %>%  httr2::req_url_path_append(utils::URLencode(name)) %>%  httr2::req_url_path_append(\"/\")  resp <- req %>%  httr2::req_url_query(   `like` = TRUE,   `fuzzy` = FALSE,   `offset` = 0,   `count` = count) %>%  httr2::req_perform()  res <- mr_resp_to_tibble(resp)"},{"path":"https://lifewatch.github.io/mregions2/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lifewatch.github.io/mregions2/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/req_mr_user_agent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get user agent and package version — req_mr_user_agent","title":"Get user agent and package version — req_mr_user_agent","text":"Get user agent package version","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/req_mr_user_agent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get user agent and package version — req_mr_user_agent","text":"","code":"req_mr_user_agent(.)"},{"path":"https://lifewatch.github.io/mregions2/reference/req_mr_user_agent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get user agent and package version — req_mr_user_agent","text":". http request.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/req_mr_user_agent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get user agent and package version — req_mr_user_agent","text":"character string unites user agent http request package version.","code":""},{"path":"https://lifewatch.github.io/mregions2/reference/req_mr_user_agent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get user agent and package version — req_mr_user_agent","text":"","code":"if (FALSE) { httr2::request(\"http://example.com\") %>% req_mr_user_agent() %>% httr2::req_dry_run() }"}]
